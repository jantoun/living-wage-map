@import "compass/css3/filter";
@import "compass/css3/animation";

.map {
  background-color: $contentBackground;

  .icon-lock, .icon-lock-open{
    font-size: 16px;
  }

  .geocoder-control.leaflet-control.geocoder-control-expanded{
    position: absolute;
    top: 74px;
    left: 46px;
    width: 246px;

    .geocoder-icon{
      position: absolute;
      font-size: 18px;
      right: 0;
      padding: 0 2px;
      margin-top: -1px;
      cursor: pointer;
    }

    .geocoder-control-input{
      background-position: left center;
      padding: 5px 25px 5px 5px;
      background-image: none;
      cursor: select;
    }

  }

  .clear-geocode{
    padding: 5px;
    margin-top: 5px;
    border-radius: 4px;
    background-color: $highlightBackground;
    color: $mainBackground;
    text-align: center;
    cursor: pointer;

    &:hover{
      background-color: #666;
    }
  }

  .home-btn-wrapper{
    position: absolute;
    top: 74px;
    left: 10px;
    border-radius: 4px;
    box-shadow: 0 1px 5px rgba(0,0,0,0.65);
    z-index: 1000;
    cursor: pointer;

    .icon-home{
      padding-left: 2px;
      height: 26px;
      width: 24px;
      font-size: 16px;
      background-color: $mainBackground;
      border-radius: 4px;
    }

    &:hover{
      background-color: #f4f4f4;
    }
  }

  // .geocoder-wrapper{
  //   position: absolute;
  //   top: 73px;
  //   left: 46px;
  //   height: 26px;
  //   width: 246px;
  //   background-color: $mainBackground;
  //   border-radius: 4px;
  //   box-shadow: 0 1px 5px rgba(0,0,0,0.65);
  //   z-index: 1000;
  // }

  .county-toggle-wrapper{
    position: absolute;
    left: 46px;
    top: 10px;
    box-shadow: 0 1px 5px rgba(0,0,0,0.65);
    border-radius: 4px;
    z-index: 1000;

    .county-toggle{
      border-top-left-radius: 4px;
      border-bottom-left-radius: 4px;
    }

    .metro-toggle{
      border-top-right-radius: 4px;
      border-bottom-right-radius: 4px;
    }

    .btn-toggle{
      text-align: center;
      font-size: 1.2em;
      padding: 16px 25px;
      color: $light-gray;
      background-color: $highlightBackground;

      &:not(.active){
        cursor: pointer;

        &:hover{
          background-color: #999;
          color: $mainBackground;
        }
      }

      &.active{
        font-weight: bold;
        color: $mainColor;
        background-color: $mainBackground;
        cursor: default;
      }
    }
  }



  &.leaflet-touch{

    .home-btn-wrapper{
      top: 128px;
      box-shadow: none;
      border: 2px solid rgba(0,0,0,0.2);

      .icon-home{
        padding: 2px 0 0 4px;
        height: 28px;
        width: 26px;
      }
    }

    .county-toggle-wrapper{
      left: 54px;
      top: 10px;
      border: 2px solid rgba(0,0,0,0.2);
      box-shadow: none;

      .county-toggle{
        border-top-left-radius: 2px;
        border-bottom-left-radius: 2px;
      }

      .metro-toggle{
        border-top-right-radius: 2px;
        border-bottom-right-radius: 2px;
      }

      .btn-toggle{
        padding: 20px 25px;
      }
    }

    .geocoder-control.leaflet-control.geocoder-control-expanded{
      top: 85px;
      left: 54px;
      width: 250px;

      .geocoder-icon{
        padding: 0 4px;
        margin-top: 3px
      }

      .geocoder-control-input{
        height: 34px;
        padding: 7px 27px 7px 7px;
      }
    }

  }

  &.leaflet-container .leaflet-clickable{
    cursor: default !important;
  }

  .living-wage-labels-layer{
    @include animation(labelsToBlack 2s);
  }

  &[data-active-layer="working-parent-counties"] .living-wage-labels-layer{
    @include filter(invert(1) brightness(1.25) contrast(1.1));
    @include animation(labelsToWhite 1s);
  }

  // .leaflet-tile{
  //   filter:blur(10px);
  //   opacity: 0;
  //   transform: rotate( 0deg ) scale(0);
  // }
  // .leaflet-tile.leaflet-tile-loaded{
  //   filter:blur(0);
  //   opacity: 1;
  //   transform: rotate( 360deg ) scale(1);
  //   transition:.8s all ease-in;
  // }
}

@include keyframes(labelsToWhite) {
  0% {
    @include filter(invert(0) brightness(1) contrast(1));
  }
  100% {
    @include filter(invert(1) brightness(1.25) contrast(1.1));
  }
}

@include keyframes(labelsToBlack) {
  0% {
    @include filter(invert(1) brightness(1.25) contrast(1.1));
  }
  100% {
    @include filter(invert(0) brightness(1) contrast(1));
  }
}